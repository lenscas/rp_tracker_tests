[33mExecuting : users[39m
[36mReset DB[39m
[33mDB got reset.[39m
Test login
missing params
making a request for : 	http://localhost/tracker/index.php/api/login
[32mIt passed the test[39m
Incorrect password
Correct loggedIn
making a request for : 	http://localhost/tracker/index.php/api/login
[32mIt passed the test[39m
try to login while logged in
making a request for : 	http://localhost/tracker/index.php/api/login
[32mIt passed the test[39m
Get own profile
nil
making a request for : 	http://localhost/tracker/index.php/api/users/68026ea182128245c9fe6aeb549578853db0a166
[32mIt passed the test[39m
Get a fake profile
table: 0x5579ceeac240
making a request for : 	http://localhost/tracker/index.php/api/users/fake
[32mIt passed the test[39m
[32mPassed test : users[39m
[33mExecuting : actions[39m
[36mReset DB[39m
[33mDB got reset.[39m
get all actions
after safe set?
Make a BS call
table: 0x5579ceeb37b0
making a request for : 	http://localhost/tracker/index.php/api/rp/DOESNOTEXISTS/actions
[32mIt passed the test[39m
Make a real call
table: 0x5579ceeb3870
making a request for : 	http://localhost/tracker/index.php/api/rp/1234567/actions
[32mIt passed the test[39m
execute actions
after safe set?
autoUpdate	0
target	char321
user	char123
Make a BS call
making a request for : 	http://localhost/tracker/index.php/api/rp/DOESNOTEXISTS/battles/DOESNOTEXISTS/actions/DOESNOTEXISTS/run
[32mIt passed the test[39m
Make a BS call
making a request for : 	http://localhost/tracker/index.php/api/rp/DOESNOTEXISTS/battles/1/actions/8/run
[32mIt passed the test[39m
Make a BS call
making a request for : 	http://localhost/tracker/index.php/api/rp/DOESNOTEXISTS/battles/DOESNOTEXISTS/actions/DOESNOTEXISTS/run
[32mIt passed the test[39m
Make a BS call
making a request for : 	http://localhost/tracker/index.php/api/rp/DOESNOTEXISTS/battles/DOESNOTEXISTS/actions/8/run
[32mIt passed the test[39m
Make a BS call
making a request for : 	http://localhost/tracker/index.php/api/rp/DOESNOTEXISTS/battles/DOESNOTEXISTS/actions/DOESNOTEXISTS/run
[32mIt passed the test[39m
Make a BS call
making a request for : 	http://localhost/tracker/index.php/api/rp/DOESNOTEXISTS/battles/1/actions/8/run
[32mIt passed the test[39m
Make a BS call
making a request for : 	http://localhost/tracker/index.php/api/rp/DOESNOTEXISTS/battles/DOESNOTEXISTS/actions/DOESNOTEXISTS/run
[32mIt passed the test[39m
make a request while missing	autoUpdate
making a request for : 	http://localhost/tracker/index.php/api/rp/1234567/battles/1/actions/8/run
[32mIt passed the test[39m
make a request while missing	target
making a request for : 	http://localhost/tracker/index.php/api/rp/1234567/battles/1/actions/8/run
[32mIt passed the test[39m
make a request while missing	user
making a request for : 	http://localhost/tracker/index.php/api/rp/1234567/battles/1/actions/8/run
[32mIt passed the test[39m
Make a real call
autoUpdate	0
target	char321
user	char123
making a request for : 	http://localhost/tracker/index.php/api/rp/1234567/battles/1/actions/8/run
false
false
[31mIt is not the correct code. Expected: 201 got 200[39m
responce : 	"object(LuaException)#29 (7) {
  ["message":protected]=>
  string(42) "[string "line"]:35: syntax error near '..'"
  ["string":"Exception":private]=>
  string(0) ""
  ["code":protected]=>
  int(3)
  ["file":protected]=>
  string(54) "/var/www/html/tracker/application/models/Lua_model.php"
  ["line":protected]=>
  int(63)
  ["trace":"Exception":private]=>
  array(6) {
    [0]=>
    array(6) {
      ["file"]=>
      string(54) "/var/www/html/tracker/application/models/Lua_model.php"
      ["line"]=>
      int(63)
      ["function"]=>
      string(4) "eval"
      ["class"]=>
      string(3) "Lua"
      ["type"]=>
      string(2) "->"
      ["args"]=>
      array(1) {
        [0]=>
        string(9152) "if not returnDeltas then
	function returnDeltas(deltas)
		io.write("[")
		local firstDelta = true
		for dkey,delta in ipairs(deltas) do
			firstDelta = (not firstDelta ) and (io.write(",") and false)
			io.write("{")
			local firstV = true
			for fkey,fvalue in pairs(delta) do
				firstV = ((not firstV ) and (io.write(",") and false))
				io.write('"'..fkey..'":"'..tostring(fvalue)..'"')
			end
			io.write("}")
		end
		io.write("]\n")
	end
end
function Battle(battleData,systemConfig)
	local deltas = {}
	local fun = {}
	local charset = {}

	local function printTable(ptable,tabs,printStr)
		tabs = tabs or 0
		printStr = printStr or ""
		for key,value in pairs(ptable) do
			local str = ""
			for i=0, tabs do
				str = str .. "\t"
			end
			if type(value) == "table" then
				printStr = printStr..str..key.. "\tTable\n"
				printStr = printTable(value,tabs,printStr)
			else
				printStr = printStr..str..key .. "\t"value.."\n"
			end
		end
		return printStr
	end
	local function getDelta(kind,code)
		if code == nil then
			code = kind
			kind = nil
		end
		for key,delta in ipairs(deltas) do
			if not kind then
				if delta.code == code then
					return delta
				end
			elseif delta.what == kind and delta.code == code then
				return delta
			end
		end
	end
	local function removeDelta(deltaData)
		getDelta(deltaData.what,deltaData.code).isInActive = true
	end
	local function checkIfDeltaCodeIsUnique(what,code)
		return not getDelta(what,code)
	end
	-- qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM1234567890
	for i = 48,  57 do table.insert(charset, string.char(i)) end
	for i = 65,  90 do table.insert(charset, string.char(i)) end
	for i = 97, 122 do table.insert(charset, string.char(i)) end
	local function createTempCode(checkIfExists)
		while true do
			local codeTable = {}
			for i=1,10 do
				table.insert(codeTable,charset[math.random(1,#charset)])
			end
			local code = "lua_temp_"..table.concat(codeTable,"")
			if (not checkIfExists(code)) and checkIfDeltaCodeIsUnique(code) then
				return code
			end
		end
	end

	local function searchMod(character,modId)
		local workWith = battleData.characters[character.code].modifiers
		for stat,mods in pairs(workWith) do
			if tonumber(modId) then
				for key,mod in pairs(mods) do
					if mod.modifiersId and tonumber(mod.modifiersId) == tonumber(modId) then
						return {
							mod      = mod,
							statName = stat,
							modKey   = key,
							modId    = mod.modifiersId,
						}
					end
				end
			else
				if mods[modId] then
					return {
						["mod"] = mods[modId],
						statName = stat,
						modKey = modId,
						modId  = modId,
						isNew = true
					}
				end
			end
		end
	end
	function fun.print(...)
		local arg = {...}
		if #arg == 0 then
			arg[#arg+1] = tostring(nil)
		end
		for key,value in ipairs(arg) do
			arg[key] = tostring(value)
		end
		table.insert(deltas,{
			mode    = modes.NOTHING,
			what    = kinds.OUTPUT,
			message = table.concat(arg,"\t")
		})
	end
	local function copyOver(copyTo,copyValues)
		for key,value in pairs(copyValues) do
			copyTo[key] = value
		end
	end
	function fun:insertModifier(modifierData)
		local workWith  = battleData.characters[modifierData.character.code].modifiers[modifierData.type]
		local sanerData = {
			mode      = modes.INSERT,
			what      = kinds.MODIFIER,
			amount    = modifierData.amount or error("No amount set for modifier."),
			character = modifierData.character.code or error("No target set for modifier."),
			countDown = modifierData.countDown or error("No countdown set for modifier."),
			type      = modifierData.type or error("No type set for modifier."),
			name      = modifierData.name or error("No name set for modifier."),
			code      = createTempCode(
				function(code)
					return workWith[code]
				end
			)
		}
		table.insert(deltas,sanerData)
		workWith[sanerData.code] = {}
		copyOver(workWith[sanerData.code],sanerData)
		return sanerData.code
	end
	function fun:deleteModifier(character,modId)
		modifier = searchMod(character,modId)
		if modifier.isNew then
			removeDelta({what = kinds.MODIFIER,code = modifier.modId})
		end
		table.insert(deltas,{
				mode       = modes.DELETE,
				what       = kinds.MODIFIER,
				code       = createTempCode(function(code)return false end),
				modId      = modifier.modId,
				isInActive = modifier.isNew,
				name       = modifier.mod.name
			}
		)
		battleData.characters[character.code].modifiers[modifier.statName][modifier.modKey] = nil
	end

	function fun:updateModifier(character,modId,newData)
		local modifier = searchMod(character,modId)
		local sanerData = {
			mode      = modes.UPDATE,
			what      = kinds.MODIFIER,
			code      = createTempCode(function(code) return false end),
			amount    = newData.amount,
			countDown = newData.countDown,
			modId     = modifier.modId,
			name      = modifier.mod.name
		}
		table.insert(deltas,sanerData)
		--for k,v in pairs(modifier) do fun.print(k,v) end
		local toInsert = {
			amount = sanerData.amount,
			countDown = sanerData.countDown
		}
		copyOver(modifier.mod, toInsert)
	end
	function fun:insertCharacter(newData)
		local sanerData = {
			what = kinds.CHARACTER,
			mode = mode.INSERT,
			code = createTempCode(function(code) return battleData.characters[code] end),
			name = newData.name,
			age  = newData.age,
			appearance  = newData.appearance,
			backstory   = newData.backstory,
			personality = newData.personality,
			turnOrder   = newData.turnOrder,
		}
		table.insert(deltas,sanerData)
		battleData.characters[sanerData.code] = {
			code = sanerData.code,
			name = newData.name,
			age  = newData.age,
			appearance = newData.appearance,
			backstory  = newData.backstory,
			personality = newData.personality,
			turnOrder  = newData.turnOrder,
			modifiers  = {}
		}
		for key,value in ipairs(systemConfig.statNames) do
			battleData.characters[sanerData.code].modifiers[value] = {}
		end
		local char =  {code = sanerData.code}
		for key,value in pairs(newData.modifiers) do
			value.character = char
			self:insertModifier(value)
		end
		return char
	end
	function fun:getCharacterByCode(charCode)
		return battleData.characters[charCode] and {code = charCode}
	end
	function fun:getTotalStatsOnChar(char)
		local calcStats = {}
		local stats  = battle.characters[char.code].modifiers
		for statName, mods in pairs(stats) do
			calcStats[statName] = 0
			for modKey,mod in pairs(mods) do
				calcStats[statName] = mod.value + calcStats[statName]
			end
		end
		return calcStats
	end
	function fun:getNextCharacter(character)
		local first = nil
		local nextPot = nil
		for k,potChar in pairs(battleData.characters) do
			fun.print(character)
			if potChar.turnOrder == 1 then
				first = nextPot
				battle.print(character)
				character = fun:getCharacter(character)
			elseif potChar.turnOrder > character.turnOrder then
				if nextPot then
					if nextPot.turnOrder > potChar.turnOrder then
						nextPot = potChar
					end
				else
					nextPot = potChar
				end
			end
		end
		return nextPot or first
	end
	function fun:getCurrentCharacter()
		for k,char in pairs(battleData.characters) do
			--fun.print(char or "its empty")
			--fun.print(printTable(char))
			if char.isTurn == 1 then
				return char
			end
		end
		local key,char = next(battleData.characters)
		fun.print("key",key)
		fun.print(printTable(char))
		--fun.print(next(battleData.characters))
		error("no char found")
	end
	function fun:setTurnTo(character)
		local sanerData = {
			what    = kinds.NEXT_TURN,
			mode    = mode.UPDATE,
			code    = createTempCode(function(code) return false end),
			newTurn = character.code
		}
		table.insert(deltas,sanerData)
	end
	function fun:printBattle()
		print("battle:")
		fun.print(printTable(battleData))
		print("delta's")
		fun.print(printTable(deltas))
	end
	return fun,deltas
end
function roll(amount,sides)
	sides = sides or 10
	local rolls = {}
	local total = 0
	for i=1,amount do
		local rolled = math.random(sides)
		table.insert(rolls)
		total = total + rolled
	end
	return total,rolls
end
function rolld10(amount) return roll(amount,10) end
function rolld20(amount) return roll(amount,20) end
function rolld6(amount)  return roll(amount,6)  end

local battle,deltas = Battle(battleEnv,config)
local actionRun = load(actionScript,"Action" ,"bt",{
	table    = table,
	math     = math,
	string   = string,
	pairs    = pairs,
	next     = next,
	pcall    = pcall,
	select   = select,
	tonumber = tonumber,
	tostring = tostring,
	type     = type,
	table    = table,
	ipairs   = ipairs,
	print    = battle.print,
	error    = error,
	assert   = assert,
	battle   = battle,
	roll     = roll,
	rolld6   = rolld6,
	rolld20  = rolld20,
	rolld10  = rolld10
})


local success,message = nil
if actionRun then
	success,message = pcall(actionRun)
else
	success = false
	message = "Not a valid script/contains syntax errors."
end

if not success then
	local newDeltas = {}
	for key,value in pairs(deltas) do
		if value.what==kinds.OUTPUT then
			table.insert(newDeltas,value)
		end
	end
	table.insert(newDeltas,{
		mode = modes.NOTHING,
		what = kinds.ERROR,
		message = message}
	)
	deltas = newDeltas
end
returnDeltas(deltas)
"
      }
    }
    [1]=>
    array(6) {
      ["file"]=>
      string(54) "/var/www/html/tracker/application/models/Lua_model.php"
      ["line"]=>
      int(94)
      ["function"]=>
      string(10) "luaExecute"
      ["class"]=>
      string(9) "Lua_model"
      ["type"]=>
      string(2) "->"
      ["args"]=>
      array(1) {
        [0]=>
        array(4) {
          ["lua"]=>
          object(Lua)#30 (0) {
          }
          ["deltaCont"]=>
          &array(0) {
          }
          ["script"]=>
          string(572) "local helpers = {}
helpers["getTotalStats"] =function(character)
    print(character.code,"is awesome")
    return character
 end 
local actions = {}
actions["attack"] =function(user,target,...)
battle:insertModifier({character=target,amount=-1,name="Damage",countDown=-1,type="HP"})
 end 
actions["Accuracy check"] =function(user,target,...)

 end 
function nextTurn()
battle:setTurnTo(
    battle:getNextCharacter(
        battle:getCurrentCharacter()
    )
)

 end 
actions["attack"](
			battle:getCharacterByCode("char123"),
			battle:getCharacterByCode("char321")
		)"
          ["battle"]=>
          array(4) {
            ["code"]=>
            string(7) "1234567"
            ["name"]=>
            string(16) "some test battle"
            ["link"]=>
            NULL
            ["characters"]=>
            array(2) {
              ["char123"]=>
              array(6) {
                ["name"]=>
                string(14) "Some test name"
                ["code"]=>
                string(7) "char123"
                ["battleId"]=>
                string(1) "1"
                ["turnOrder"]=>
                string(1) "1"
                ["isTurn"]=>
                string(1) "1"
                ["modifiers"]=>
                array(8) {
                  ["HP"]=>
                  array(2) {
                    [0]=>
                    array(9) {
                      ["name"]=>
                      string(4) "Base"
                      ["value"]=>
                      string(1) "4"
                      ["countDown"]=>
                      string(2) "-1"
                      ["isBase"]=>
                      string(1) "1"
                      ["modifiersId"]=>
                      string(4) "1660"
                      ["intName"]=>
                      string(2) "HP"
                      ["statName"]=>
                      string(6) "Health"
                      ["statId"]=>
                      string(2) "67"
                      ["code"]=>
                      string(7) "char123"
                    }
                    [1]=>
                    array(9) {
                      ["name"]=>
                      string(4) "Base"
                      ["value"]=>
                      string(1) "3"
                      ["countDown"]=>
                      string(2) "-1"
                      ["isBase"]=>
                      string(1) "1"
                      ["modifiersId"]=>
                      string(4) "1675"
                      ["intName"]=>
                      string(2) "HP"
                      ["statName"]=>
                      string(6) "Health"
                      ["statId"]=>
                      string(2) "67"
                      ["code"]=>
                      string(7) "char321"
                    }
                  }
                  ["ACC"]=>
                  array(2) {
                    [0]=>
                    array(9) {
                      ["name"]=>
                      string(4) "Base"
                      ["value"]=>
                      string(1) "4"
                      ["countDown"]=>
                      string(2) "-1"
                      ["isBase"]=>
                      string(1) "1"
                      ["modifiersId"]=>
                      string(4) "1661"
                      ["intName"]=>
                      string(3) "ACC"
                      ["statName"]=>
                      string(8) "Accuracy"
                      ["statId"]=>
                      string(2) "68"
                      ["code"]=>
                      string(7) "char123"
                    }
                    [1]=>
                    array(9) {
                      ["name"]=>
                      string(4) "Base"
                      ["value"]=>
                      string(1) "3"
                      ["countDown"]=>
                      string(2) "-1"
                      ["isBase"]=>
                      string(1) "1"
                      ["modifiersId"]=>
                      string(4) "1676"
                      ["intName"]=>
                      string(3) "ACC"
                      ["statName"]=>
                      string(8) "Accuracy"
                      ["statId"]=>
                      string(2) "68"
                      ["code"]=>
                      string(7) "char321"
                    }
                  }
                  ["EVA"]=>
                  array(2) {
                    [0]=>
                    array(9) {
                      ["name"]=>
                      string(4) "Base"
                      ["value"]=>
                      string(1) "4"
                      ["countDown"]=>
                      string(2) "-1"
                      ["isBase"]=>
                      string(1) "1"
                      ["modifiersId"]=>
                      string(4) "1662"
                      ["intName"]=>
                      string(3) "EVA"
                      ["statName"]=>
                      string(7) "Evasion"
                      ["statId"]=>
                      string(2) "69"
                      ["code"]=>
                      string(7) "char123"
                    }
                    [1]=>
                    array(9) {
                      ["name"]=>
                      string(4) "Base"
                      ["value"]=>
                      string(1) "3"
                      ["countDown"]=>
                      string(2) "-1"
                      ["isBase"]=>
                      string(1) "1"
                      ["modifiersId"]=>
                      string(4) "1677"
                      ["intName"]=>
                      string(3) "EVA"
                      ["statName"]=>
                      string(7) "Evasion"
                      ["statId"]=>
                      string(2) "69"
                      ["code"]=>
                      string(7) "char321"
                    }
                  }
                  ["ATK"]=>
                  array(2) {
                    [0]=>
                    array(9) {
                      ["name"]=>
                      string(4) "Base"
                      ["value"]=>
                      string(1) "4"
                      ["countDown"]=>
                      string(2) "-1"
                      ["isBase"]=>
                      string(1) "1"
                      ["modifiersId"]=>
                      string(4) "1663"
                      ["intName"]=>
                      string(3) "ATK"
                      ["statName"]=>
                      string(6) "Attack"
                      ["statId"]=>
                      string(2) "70"
                      ["code"]=>
                      string(7) "char123"
                    }
                    [1]=>
                    array(9) {
                      ["name"]=>
                      string(4) "Base"
                      ["value"]=>
                      string(1) "3"
                      ["countDown"]=>
                      string(2) "-1"
                      ["isBase"]=>
                      string(1) "1"
                      ["modifiersId"]=>
                      string(4) "1678"
                      ["intName"]=>
                      string(3) "ATK"
                      ["statName"]=>
                      string(6) "Attack"
                      ["statId"]=>
                      string(2) "70"
                      ["code"]=>
                      string(7) "char321"
                    }
                  }
                  ["DEF"]=>
                  array(2) {
                    [0]=>
                    array(9) {
                      ["name"]=>
                      string(4) "Base"
                      ["value"]=>
                      string(1) "4"
                      ["countDown"]=>
                      string(2) "-1"
                      ["isBase"]=>
                      string(1) "1"
                      ["modifiersId"]=>
                      string(4) "1664"
                      ["intName"]=>
                      string(3) "DEF"
                      ["statName"]=>
                      string(7) "Defense"
                      ["statId"]=>
                      string(2) "71"
                      ["code"]=>
                      string(7) "char123"
                    }
                    [1]=>
                    array(9) {
                      ["name"]=>
                      string(4) "Base"
                      ["value"]=>
                      string(1) "3"
                      ["countDown"]=>
                      string(2) "-1"
                      ["isBase"]=>
                      string(1) "1"
                      ["modifiersId"]=>
                      string(4) "1679"
                      ["intName"]=>
                      string(3) "DEF"
                      ["statName"]=>
                      string(7) "Defense"
                      ["statId"]=>
                      string(2) "71"
                      ["code"]=>
                      string(7) "char321"
                    }
                  }
                  ["SPD"]=>
                  array(2) {
                    [0]=>
                    array(9) {
                      ["name"]=>
                      string(4) "Base"
                      ["value"]=>
                      string(1) "4"
                      ["countDown"]=>
                      string(2) "-1"
                      ["isBase"]=>
                      string(1) "1"
                      ["modifiersId"]=>
                      string(4) "1665"
                      ["intName"]=>
                      string(3) "SPD"
                      ["statName"]=>
                      string(5) "Speed"
                      ["statId"]=>
                      string(2) "72"
                      ["code"]=>
                      string(7) "char123"
                    }
                    [1]=>
                    array(9) {
                      ["name"]=>
                      string(4) "Base"
                      ["value"]=>
                      string(1) "3"
                      ["countDown"]=>
                      string(2) "-1"
                      ["isBase"]=>
                      string(1) "1"
                      ["modifiersId"]=>
                      string(4) "1680"
                      ["intName"]=>
                      string(3) "SPD"
                      ["statName"]=>
                      string(5) "Speed"
                      ["statId"]=>
                      string(2) "72"
                      ["code"]=>
                      string(7) "char321"
                    }
                  }
                  ["SZE"]=>
                  array(2) {
                    [0]=>
                    array(9) {
                      ["name"]=>
                      string(4) "Base"
                      ["value"]=>
                      string(1) "4"
                      ["countDown"]=>
                      string(2) "-1"
                      ["isBase"]=>
                      string(1) "1"
                      ["modifiersId"]=>
                      string(4) "1666"
                      ["intName"]=>
                      string(3) "SZE"
                      ["statName"]=>
                      string(4) "Size"
                      ["statId"]=>
                      string(2) "73"
                      ["code"]=>
                      string(7) "char123"
                    }
                    [1]=>
                    array(9) {
                      ["name"]=>
                      string(4) "Base"
                      ["value"]=>
                      string(1) "3"
                      ["countDown"]=>
                      string(2) "-1"
                      ["isBase"]=>
                      string(1) "1"
                      ["modifiersId"]=>
                      string(4) "1681"
                      ["intName"]=>
                      string(3) "SZE"
                      ["statName"]=>
                      string(4) "Size"
                      ["statId"]=>
                      string(2) "73"
                      ["code"]=>
                      string(7) "char321"
                    }
                  }
                  ["RAN"]=>
                  array(2) {
                    [0]=>
                    array(9) {
                      ["name"]=>
                      string(4) "Base"
                      ["value"]=>
                      string(1) "4"
                      ["countDown"]=>
                      string(2) "-1"
                      ["isBase"]=>
                      string(1) "1"
                      ["modifiersId"]=>
                      string(4) "1667"
                      ["intName"]=>
                      string(3) "RAN"
                      ["statName"]=>
                      string(5) "Range"
                      ["statId"]=>
                      string(2) "74"
                      ["code"]=>
                      string(7) "char123"
                    }
                    [1]=>
                    array(9) {
                      ["name"]=>
                      string(4) "Base"
                      ["value"]=>
                      string(1) "3"
                      ["countDown"]=>
                      string(2) "-1"
                      ["isBase"]=>
                      string(1) "1"
                      ["modifiersId"]=>
                      string(4) "1682"
                      ["intName"]=>
                      string(3) "RAN"
                      ["statName"]=>
                      string(5) "Range"
                      ["statId"]=>
                      string(2) "74"
                      ["code"]=>
                      string(7) "char321"
                    }
                  }
                }
              }
              ["char321"]=>
              array(6) {
                ["name"]=>
                string(21) "Some second test name"
                ["code"]=>
                string(7) "char321"
                ["battleId"]=>
                string(1) "1"
                ["turnOrder"]=>
                string(1) "2"
                ["isTurn"]=>
                string(1) "0"
                ["modifiers"]=>
                array(8) {
                  ["HP"]=>
                  array(2) {
                    [0]=>
                    array(9) {
                      ["name"]=>
                      string(4) "Base"
                      ["value"]=>
                      string(1) "4"
                      ["countDown"]=>
                      string(2) "-1"
                      ["isBase"]=>
                      string(1) "1"
                      ["modifiersId"]=>
                      string(4) "1660"
                      ["intName"]=>
                      string(2) "HP"
                      ["statName"]=>
                      string(6) "Health"
                      ["statId"]=>
                      string(2) "67"
                      ["code"]=>
                      string(7) "char123"
                    }
                    [1]=>
                    array(9) {
                      ["name"]=>
                      string(4) "Base"
                      ["value"]=>
                      string(1) "3"
                      ["countDown"]=>
                      string(2) "-1"
                      ["isBase"]=>
                      string(1) "1"
                      ["modifiersId"]=>
                      string(4) "1675"
                      ["intName"]=>
                      string(2) "HP"
                      ["statName"]=>
                      string(6) "Health"
                      ["statId"]=>
                      string(2) "67"
                      ["code"]=>
                      string(7) "char321"
                    }
                  }
                  ["ACC"]=>
                  array(2) {
                    [0]=>
                    array(9) {
                      ["name"]=>
                      string(4) "Base"
                      ["value"]=>
                      string(1) "4"
                      ["countDown"]=>
                      string(2) "-1"
                      ["isBase"]=>
                      string(1) "1"
                      ["modifiersId"]=>
                      string(4) "1661"
                      ["intName"]=>
                      string(3) "ACC"
                      ["statName"]=>
                      string(8) "Accuracy"
                      ["statId"]=>
                      string(2) "68"
                      ["code"]=>
                      string(7) "char123"
                    }
                    [1]=>
                    array(9) {
                      ["name"]=>
                      string(4) "Base"
                      ["value"]=>
                      string(1) "3"
                      ["countDown"]=>
                      string(2) "-1"
                      ["isBase"]=>
                      string(1) "1"
                      ["modifiersId"]=>
                      string(4) "1676"
                      ["intName"]=>
                      string(3) "ACC"
                      ["statName"]=>
                      string(8) "Accuracy"
                      ["statId"]=>
                      string(2) "68"
                      ["code"]=>
                      string(7) "char321"
                    }
                  }
                  ["EVA"]=>
                  array(2) {
                    [0]=>
                    array(9) {
                      ["name"]=>
                      string(4) "Base"
                      ["value"]=>
                      string(1) "4"
                      ["countDown"]=>
                      string(2) "-1"
                      ["isBase"]=>
                      string(1) "1"
                      ["modifiersId"]=>
                      string(4) "1662"
                      ["intName"]=>
                      string(3) "EVA"
                      ["statName"]=>
                      string(7) "Evasion"
                      ["statId"]=>
                      string(2) "69"
                      ["code"]=>
                      string(7) "char123"
                    }
                    [1]=>
                    array(9) {
                      ["name"]=>
                      string(4) "Base"
                      ["value"]=>
                      string(1) "3"
                      ["countDown"]=>
                      string(2) "-1"
                      ["isBase"]=>
                      string(1) "1"
                      ["modifiersId"]=>
                      string(4) "1677"
                      ["intName"]=>
                      string(3) "EVA"
                      ["statName"]=>
                      string(7) "Evasion"
                      ["statId"]=>
                      string(2) "69"
                      ["code"]=>
                      string(7) "char321"
                    }
                  }
                  ["ATK"]=>
                  array(2) {
                    [0]=>
                    array(9) {
                      ["name"]=>
                      string(4) "Base"
                      ["value"]=>
                      string(1) "4"
                      ["countDown"]=>
                      string(2) "-1"
                      ["isBase"]=>
                      string(1) "1"
                      ["modifiersId"]=>
                      string(4) "1663"
                      ["intName"]=>
                      string(3) "ATK"
                      ["statName"]=>
                      string(6) "Attack"
                      ["statId"]=>
                      string(2) "70"
                      ["code"]=>
                      string(7) "char123"
                    }
                    [1]=>
                    array(9) {
                      ["name"]=>
                      string(4) "Base"
                      ["value"]=>
                      string(1) "3"
                      ["countDown"]=>
                      string(2) "-1"
                      ["isBase"]=>
                      string(1) "1"
                      ["modifiersId"]=>
                      string(4) "1678"
                      ["intName"]=>
                      string(3) "ATK"
                      ["statName"]=>
                      string(6) "Attack"
                      ["statId"]=>
                      string(2) "70"
                      ["code"]=>
                      string(7) "char321"
                    }
                  }
                  ["DEF"]=>
                  array(2) {
                    [0]=>
                    array(9) {
                      ["name"]=>
                      string(4) "Base"
                      ["value"]=>
                      string(1) "4"
                      ["countDown"]=>
                      string(2) "-1"
                      ["isBase"]=>
                      string(1) "1"
                      ["modifiersId"]=>
                      string(4) "1664"
                      ["intName"]=>
                      string(3) "DEF"
                      ["statName"]=>
                      string(7) "Defense"
                      ["statId"]=>
                      string(2) "71"
                      ["code"]=>
                      string(7) "char123"
                    }
                    [1]=>
                    array(9) {
                      ["name"]=>
                      string(4) "Base"
                      ["value"]=>
                      string(1) "3"
                      ["countDown"]=>
                      string(2) "-1"
                      ["isBase"]=>
                      string(1) "1"
                      ["modifiersId"]=>
                      string(4) "1679"
                      ["intName"]=>
                      string(3) "DEF"
                      ["statName"]=>
                      string(7) "Defense"
                      ["statId"]=>
                      string(2) "71"
                      ["code"]=>
                      string(7) "char321"
                    }
                  }
                  ["SPD"]=>
                  array(2) {
                    [0]=>
                    array(9) {
                      ["name"]=>
                      string(4) "Base"
                      ["value"]=>
                      string(1) "4"
                      ["countDown"]=>
                      string(2) "-1"
                      ["isBase"]=>
                      string(1) "1"
                      ["modifiersId"]=>
                      string(4) "1665"
                      ["intName"]=>
                      string(3) "SPD"
                      ["statName"]=>
                      string(5) "Speed"
                      ["statId"]=>
                      string(2) "72"
                      ["code"]=>
                      string(7) "char123"
                    }
                    [1]=>
                    array(9) {
                      ["name"]=>
                      string(4) "Base"
                      ["value"]=>
                      string(1) "3"
                      ["countDown"]=>
                      string(2) "-1"
                      ["isBase"]=>
                      string(1) "1"
                      ["modifiersId"]=>
                      string(4) "1680"
                      ["intName"]=>
                      string(3) "SPD"
                      ["statName"]=>
                      string(5) "Speed"
                      ["statId"]=>
                      string(2) "72"
                      ["code"]=>
                      string(7) "char321"
                    }
                  }
                  ["SZE"]=>
                  array(2) {
                    [0]=>
                    array(9) {
                      ["name"]=>
                      string(4) "Base"
                      ["value"]=>
                      string(1) "4"
                      ["countDown"]=>
                      string(2) "-1"
                      ["isBase"]=>
                      string(1) "1"
                      ["modifiersId"]=>
                      string(4) "1666"
                      ["intName"]=>
                      string(3) "SZE"
                      ["statName"]=>
                      string(4) "Size"
                      ["statId"]=>
                      string(2) "73"
                      ["code"]=>
                      string(7) "char123"
                    }
                    [1]=>
                    array(9) {
                      ["name"]=>
                      string(4) "Base"
                      ["value"]=>
                      string(1) "3"
                      ["countDown"]=>
                      string(2) "-1"
                      ["isBase"]=>
                      string(1) "1"
                      ["modifiersId"]=>
                      string(4) "1681"
                      ["intName"]=>
                      string(3) "SZE"
                      ["statName"]=>
                      string(4) "Size"
                      ["statId"]=>
                      string(2) "73"
                      ["code"]=>
                      string(7) "char321"
                    }
                  }
                  ["RAN"]=>
                  array(2) {
                    [0]=>
                    array(9) {
                      ["name"]=>
                      string(4) "Base"
                      ["value"]=>
                      string(1) "4"
                      ["countDown"]=>
                      string(2) "-1"
                      ["isBase"]=>
                      string(1) "1"
                      ["modifiersId"]=>
                      string(4) "1667"
                      ["intName"]=>
                      string(3) "RAN"
                      ["statName"]=>
                      string(5) "Range"
                      ["statId"]=>
                      string(2) "74"
                      ["code"]=>
                      string(7) "char123"
                    }
                    [1]=>
                    array(9) {
                      ["name"]=>
                      string(4) "Base"
                      ["value"]=>
                      string(1) "3"
                      ["countDown"]=>
                      string(2) "-1"
                      ["isBase"]=>
                      string(1) "1"
                      ["modifiersId"]=>
                      string(4) "1682"
                      ["intName"]=>
                      string(3) "RAN"
                      ["statName"]=>
                      string(5) "Range"
                      ["statId"]=>
                      string(2) "74"
                      ["code"]=>
                      string(7) "char321"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    [2]=>
    array(6) {
      ["file"]=>
      string(57) "/var/www/html/tracker/application/models/Action_model.php"
      ["line"]=>
      int(252)
      ["function"]=>
      string(9) "runAction"
      ["class"]=>
      string(9) "Lua_model"
      ["type"]=>
      string(2) "->"
      ["args"]=>
      array(4) {
        [0]=>
        string(7) "1234567"
        [1]=>
        string(1) "1"
        [2]=>
        array(5) {
          ["autoUpdate"]=>
          bool(false)
          ["target"]=>
          string(7) "char321"
          ["user"]=>
          string(7) "char123"
          ["actionId"]=>
          string(1) "8"
          ["action"]=>
          string(6) "attack"
        }
        [3]=>
        array(2) {
          [0]=>
          object(stdClass)#24 (4) {
            ["id"]=>
            string(1) "8"
            ["name"]=>
            string(6) "attack"
            ["code"]=>
            string(88) "battle:insertModifier({character=target,amount=-1,name="Damage",countDown=-1,type="HP"})"
            ["rpId"]=>
            string(1) "1"
          }
          [1]=>
          object(stdClass)#25 (4) {
            ["id"]=>
            string(1) "9"
            ["name"]=>
            string(14) "Accuracy check"
            ["code"]=>
            string(0) ""
            ["rpId"]=>
            string(1) "1"
          }
        }
      }
    }
    [3]=>
    array(6) {
      ["file"]=>
      string(61) "/var/www/html/tracker/application/controllers/api/Actions.php"
      ["line"]=>
      int(30)
      ["function"]=>
      string(9) "runAction"
      ["class"]=>
      string(12) "Action_model"
      ["type"]=>
      string(2) "->"
      ["args"]=>
      array(3) {
        [0]=>
        string(7) "1234567"
        [1]=>
        string(1) "1"
        [2]=>
        array(5) {
          ["autoUpdate"]=>
          bool(false)
          ["target"]=>
          string(7) "char321"
          ["user"]=>
          string(7) "char123"
          ["actionId"]=>
          string(1) "8"
          ["action"]=>
          string(6) "attack"
        }
      }
    }
    [4]=>
    array(6) {
      ["file"]=>
      string(49) "/var/www/html/tracker/system/core/CodeIgniter.php"
      ["line"]=>
      int(514)
      ["function"]=>
      string(9) "runAction"
      ["class"]=>
      string(7) "Actions"
      ["type"]=>
      string(2) "->"
      ["args"]=>
      array(3) {
        [0]=>
        string(7) "1234567"
        [1]=>
        string(1) "1"
        [2]=>
        string(1) "8"
      }
    }
    [5]=>
    array(4) {
      ["file"]=>
      string(31) "/var/www/html/tracker/index.php"
      ["line"]=>
      int(315)
      ["args"]=>
      array(1) {
        [0]=>
        string(49) "/var/www/html/tracker/system/core/CodeIgniter.php"
      }
      ["function"]=>
      string(12) "require_once"
    }
  }
  ["previous":"Exception":private]=>
  NULL
}
wtf!
<div style="border:1px solid #990000;padding-left:20px;margin:0 0 10px 0;">

<h4>A PHP Error was encountered</h4>

<p>Severity: Warning</p>
<p>Message:  Cannot modify header information - headers already sent by (output started at /var/www/html/tracker/application/models/Lua_model.php:65)</p>
<p>Filename: core/Common.php</p>
<p>Line Number: 573</p>


	<p>Backtrace:</p>
	
		
	
		
	
		
	
		
	
		
	
		
			<p style="margin-left:10px">
			File: /var/www/html/tracker/application/views/basicOutput.php<br />
			Line: 87<br />
			Function: set_status_header			</p>

		
	
		
	
		
	
		
			<p style="margin-left:10px">
			File: /var/www/html/tracker/application/core/MY_Controller.php<br />
			Line: 162<br />
			Function: view			</p>

		
	
		
			<p style="margin-left:10px">
			File: /var/www/html/tracker/application/controllers/api/Actions.php<br />
			Line: 36<br />
			Function: niceMade			</p>

		
	
		
	
		
			<p style="margin-left:10px">
			File: /var/www/html/tracker/index.php<br />
			Line: 315<br />
			Function: require_once			</p>

		
	

</div>{"messages":["The item is successfully created","The  is successfully created"," is successfully created"],"name":"","kind":"","pref":"3","id":null,"data":{"deltas":[],"modes":{"NOTHING":0,"INSERT":"1","DELETE":"2","UPDATE":"3"},"kinds":{"OUTPUT":0,"ERROR":"1","MODIFIER":"2","CHARACTER":"3","NEXT_TURN":"4"},"success":false},"userId":"68026ea182128245c9fe6aeb549578853db0a166"}"
